{"name":"Northwind","tagline":"An example of Ultrastructure using ye olde thyme Northwind demonstration","body":"An [Ultrastructure](http://chiralbehaviors.github.io/Ultrastructure) implementation of the venerable Northwind M$ demoware.  This is a mashup of the original order pricing demo presented in the April, 1995 issue of the Communications of the ACM and the Microsoft Northwind retail store demo.  Every software jockey on the planet understands Northwind, so...\r\n\r\nBasically, we get a much richer model of the Northwind retail store AND add order, pricing and shipping logistics workflows so we can actually sell things rather than just report them ;)\r\n\r\nPlease see the [Northwind Wiki](https://github.com/ChiralBehaviors/Northwind/wiki) for more information.\r\n\r\n### Updates\r\nI broke out the general ontology from what is really the test scenario data.  I can argue that US, EURO, etc, need to be in the general, but hey.  Not worrying about a general locations data pack for ultrastructure just yet.\r\n\r\nWhat it does do, though, is provide a much clearer distinction between what is pretty general in the model and what kind of stuff one has to provide in real live scenarios.  And it's no surprise.  Stuff like one's actual products, suppliers, customers, etc.\r\n\r\n***\r\n\r\nI took out all the manual Phantasms, as Northwind is now generating the phantasms from the facets in the Northwind ontology.  This is done with a Maven plugin, and you can see this in the northwind maven module's pom.  You'll have to build at least through generate-sources to see the generated phantasms.  They are generated in target/generated-sources/phantasm directory in the northwind module.\r\n\r\nFrankly, I'm amazed at how simple it has been creating a rather complex model.  Already, we have a rich structure for the system and you can see that the Ultrastructure design discipline naturally creates general abstractions, and how the northwind model could be fully generalized with a little bit of effort.  For the moment, I'm resisting the urge to do that, as I'm more interested in getting a functional demo out the door.  In any event, it'll be interesting to have the refactoring history in git once I do start on generalizing this stuff.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}